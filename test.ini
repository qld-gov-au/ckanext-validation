[DEFAULT]
debug = false
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]
use = config:../ckan/test-core.ini

# Disable CSRF on local testing TODO: make it work with this enabled
WTF_CSRF_ENABLED = False


beaker.session.secret = bSmgPpaxg2M+ZRes3u1TXwIcE
SECRET_KEY = bSmgPpaxg2M+ZRes3u1TXwIcE

# Insert any custom config settings to be used when running your extension's
# tests here.
ckan.plugins =
    validation
    scheming_datasets
    test_validation_plugin

# ckanext-validation
ckanext.validation.run_on_update_async = False
ckanext.validation.run_on_create_async = False

scheming.dataset_schemas = ckanext.validation.examples:ckan_default_schema.json
scheming.presets = ckanext.scheming:presets.json
				   ckanext.validation:presets.json

ckan.requests.timeout = 5

# Logging configuration
[loggers]
keys = root, ckan, ckanext, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_ckan]
level = INFO
handlers = console
qualname = ckan
propagate = 0

[logger_ckanext]
level = DEBUG
handlers = console
qualname = ckanext
propagate = 0

[logger_sqlalchemy]
handlers =
qualname = sqlalchemy.engine
level = WARN

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
